# THIS FILE HAS BEEN AUTO-GENERATED BY "PRISMA DEPLOY"
# DO NOT EDIT THIS FILE DIRECTLY

#
# Model Types
#

type Philosopher implements Node {
  id: ID!
  name: String!
  imgURL: String!
  timePeriod: String!
  region: String
  branch: String
  resource: String!
}

type User implements Node {
  id: ID!
  name: String!
  email: String!
  pw: String!
}


#
# Other Types
#

type AggregatePhilosopher {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  """
  The number of nodes that have been affected by the Batch operation.
  """
  count: Long!
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createUser(data: UserCreateInput!): User!
  createPhilosopher(data: PhilosopherCreateInput!): Philosopher!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updatePhilosopher(data: PhilosopherUpdateInput!, where: PhilosopherWhereUniqueInput!): Philosopher
  deleteUser(where: UserWhereUniqueInput!): User
  deletePhilosopher(where: PhilosopherWhereUniqueInput!): Philosopher
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  upsertPhilosopher(where: PhilosopherWhereUniqueInput!, create: PhilosopherCreateInput!, update: PhilosopherUpdateInput!): Philosopher!
  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput!): BatchPayload!
  updateManyPhilosophers(data: PhilosopherUpdateInput!, where: PhilosopherWhereInput!): BatchPayload!
  deleteManyUsers(where: UserWhereInput!): BatchPayload!
  deleteManyPhilosophers(where: PhilosopherWhereInput!): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""
An object with an ID
"""
interface Node {
  """
  The id of the object.
  """
  id: ID!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String
}

"""
A connection to a list of items.
"""
type PhilosopherConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [PhilosopherEdge]!
  aggregate: AggregatePhilosopher!
}

input PhilosopherCreateInput {
  name: String!
  imgURL: String!
  timePeriod: String!
  region: String
  branch: String
  resource: String!
}

"""
An edge in a connection.
"""
type PhilosopherEdge {
  """
  The item at the end of the edge.
  """
  node: Philosopher!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum PhilosopherOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  imgURL_ASC
  imgURL_DESC
  timePeriod_ASC
  timePeriod_DESC
  region_ASC
  region_DESC
  branch_ASC
  branch_DESC
  resource_ASC
  resource_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type PhilosopherPreviousValues {
  id: ID!
  name: String!
  imgURL: String!
  timePeriod: String!
  region: String
  branch: String
  resource: String!
}

type PhilosopherSubscriptionPayload {
  mutation: MutationType!
  node: Philosopher
  updatedFields: [String!]
  previousValues: PhilosopherPreviousValues
}

input PhilosopherSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [PhilosopherSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [PhilosopherSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: PhilosopherWhereInput
}

input PhilosopherUpdateInput {
  name: String
  imgURL: String
  timePeriod: String
  region: String
  branch: String
  resource: String
}

input PhilosopherWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [PhilosopherWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [PhilosopherWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  imgURL: String
  """
  All values that are not equal to given value.
  """
  imgURL_not: String
  """
  All values that are contained in given list.
  """
  imgURL_in: [String!]
  """
  All values that are not contained in given list.
  """
  imgURL_not_in: [String!]
  """
  All values less than the given value.
  """
  imgURL_lt: String
  """
  All values less than or equal the given value.
  """
  imgURL_lte: String
  """
  All values greater than the given value.
  """
  imgURL_gt: String
  """
  All values greater than or equal the given value.
  """
  imgURL_gte: String
  """
  All values containing the given string.
  """
  imgURL_contains: String
  """
  All values not containing the given string.
  """
  imgURL_not_contains: String
  """
  All values starting with the given string.
  """
  imgURL_starts_with: String
  """
  All values not starting with the given string.
  """
  imgURL_not_starts_with: String
  """
  All values ending with the given string.
  """
  imgURL_ends_with: String
  """
  All values not ending with the given string.
  """
  imgURL_not_ends_with: String
  timePeriod: String
  """
  All values that are not equal to given value.
  """
  timePeriod_not: String
  """
  All values that are contained in given list.
  """
  timePeriod_in: [String!]
  """
  All values that are not contained in given list.
  """
  timePeriod_not_in: [String!]
  """
  All values less than the given value.
  """
  timePeriod_lt: String
  """
  All values less than or equal the given value.
  """
  timePeriod_lte: String
  """
  All values greater than the given value.
  """
  timePeriod_gt: String
  """
  All values greater than or equal the given value.
  """
  timePeriod_gte: String
  """
  All values containing the given string.
  """
  timePeriod_contains: String
  """
  All values not containing the given string.
  """
  timePeriod_not_contains: String
  """
  All values starting with the given string.
  """
  timePeriod_starts_with: String
  """
  All values not starting with the given string.
  """
  timePeriod_not_starts_with: String
  """
  All values ending with the given string.
  """
  timePeriod_ends_with: String
  """
  All values not ending with the given string.
  """
  timePeriod_not_ends_with: String
  region: String
  """
  All values that are not equal to given value.
  """
  region_not: String
  """
  All values that are contained in given list.
  """
  region_in: [String!]
  """
  All values that are not contained in given list.
  """
  region_not_in: [String!]
  """
  All values less than the given value.
  """
  region_lt: String
  """
  All values less than or equal the given value.
  """
  region_lte: String
  """
  All values greater than the given value.
  """
  region_gt: String
  """
  All values greater than or equal the given value.
  """
  region_gte: String
  """
  All values containing the given string.
  """
  region_contains: String
  """
  All values not containing the given string.
  """
  region_not_contains: String
  """
  All values starting with the given string.
  """
  region_starts_with: String
  """
  All values not starting with the given string.
  """
  region_not_starts_with: String
  """
  All values ending with the given string.
  """
  region_ends_with: String
  """
  All values not ending with the given string.
  """
  region_not_ends_with: String
  branch: String
  """
  All values that are not equal to given value.
  """
  branch_not: String
  """
  All values that are contained in given list.
  """
  branch_in: [String!]
  """
  All values that are not contained in given list.
  """
  branch_not_in: [String!]
  """
  All values less than the given value.
  """
  branch_lt: String
  """
  All values less than or equal the given value.
  """
  branch_lte: String
  """
  All values greater than the given value.
  """
  branch_gt: String
  """
  All values greater than or equal the given value.
  """
  branch_gte: String
  """
  All values containing the given string.
  """
  branch_contains: String
  """
  All values not containing the given string.
  """
  branch_not_contains: String
  """
  All values starting with the given string.
  """
  branch_starts_with: String
  """
  All values not starting with the given string.
  """
  branch_not_starts_with: String
  """
  All values ending with the given string.
  """
  branch_ends_with: String
  """
  All values not ending with the given string.
  """
  branch_not_ends_with: String
  resource: String
  """
  All values that are not equal to given value.
  """
  resource_not: String
  """
  All values that are contained in given list.
  """
  resource_in: [String!]
  """
  All values that are not contained in given list.
  """
  resource_not_in: [String!]
  """
  All values less than the given value.
  """
  resource_lt: String
  """
  All values less than or equal the given value.
  """
  resource_lte: String
  """
  All values greater than the given value.
  """
  resource_gt: String
  """
  All values greater than or equal the given value.
  """
  resource_gte: String
  """
  All values containing the given string.
  """
  resource_contains: String
  """
  All values not containing the given string.
  """
  resource_not_contains: String
  """
  All values starting with the given string.
  """
  resource_starts_with: String
  """
  All values not starting with the given string.
  """
  resource_not_starts_with: String
  """
  All values ending with the given string.
  """
  resource_ends_with: String
  """
  All values not ending with the given string.
  """
  resource_not_ends_with: String
}

input PhilosopherWhereUniqueInput {
  id: ID
  name: String
}

type Query {
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  philosophers(where: PhilosopherWhereInput, orderBy: PhilosopherOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Philosopher]!
  user(where: UserWhereUniqueInput!): User
  philosopher(where: PhilosopherWhereUniqueInput!): Philosopher
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  philosophersConnection(where: PhilosopherWhereInput, orderBy: PhilosopherOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PhilosopherConnection!
  """
  Fetches an object given its ID
  """
  node("""
  The ID of an object
  """
  id: ID!): Node
}

type Subscription {
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  philosopher(where: PhilosopherSubscriptionWhereInput): PhilosopherSubscriptionPayload
}

"""
A connection to a list of items.
"""
type UserConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  name: String!
  email: String!
  pw: String!
}

"""
An edge in a connection.
"""
type UserEdge {
  """
  The item at the end of the edge.
  """
  node: User!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  email_ASC
  email_DESC
  pw_ASC
  pw_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type UserPreviousValues {
  id: ID!
  name: String!
  email: String!
  pw: String!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [UserSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateInput {
  name: String
  email: String
  pw: String
}

input UserWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [UserWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  email: String
  """
  All values that are not equal to given value.
  """
  email_not: String
  """
  All values that are contained in given list.
  """
  email_in: [String!]
  """
  All values that are not contained in given list.
  """
  email_not_in: [String!]
  """
  All values less than the given value.
  """
  email_lt: String
  """
  All values less than or equal the given value.
  """
  email_lte: String
  """
  All values greater than the given value.
  """
  email_gt: String
  """
  All values greater than or equal the given value.
  """
  email_gte: String
  """
  All values containing the given string.
  """
  email_contains: String
  """
  All values not containing the given string.
  """
  email_not_contains: String
  """
  All values starting with the given string.
  """
  email_starts_with: String
  """
  All values not starting with the given string.
  """
  email_not_starts_with: String
  """
  All values ending with the given string.
  """
  email_ends_with: String
  """
  All values not ending with the given string.
  """
  email_not_ends_with: String
  pw: String
  """
  All values that are not equal to given value.
  """
  pw_not: String
  """
  All values that are contained in given list.
  """
  pw_in: [String!]
  """
  All values that are not contained in given list.
  """
  pw_not_in: [String!]
  """
  All values less than the given value.
  """
  pw_lt: String
  """
  All values less than or equal the given value.
  """
  pw_lte: String
  """
  All values greater than the given value.
  """
  pw_gt: String
  """
  All values greater than or equal the given value.
  """
  pw_gte: String
  """
  All values containing the given string.
  """
  pw_contains: String
  """
  All values not containing the given string.
  """
  pw_not_contains: String
  """
  All values starting with the given string.
  """
  pw_starts_with: String
  """
  All values not starting with the given string.
  """
  pw_not_starts_with: String
  """
  All values ending with the given string.
  """
  pw_ends_with: String
  """
  All values not ending with the given string.
  """
  pw_not_ends_with: String
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
